version: '3.8'

services:
  # n8n service
  n8n:
    build:
      context: ./n8n
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=supabase-db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-n8n-encryption-key}
      - WEBHOOK_URL=http://localhost:5678/
    volumes:
      - ./n8n-data:/home/node/.n8n
    depends_on:
      - supabase-db

  # Supabase services
  supabase-db:
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=postgres
    volumes:
      - ./supabase/volumes/db/data:/var/lib/postgresql/data
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  supabase-auth:
    image: supabase/gotrue:latest
    restart: unless-stopped
    ports:
      - "9999:9999"
    environment:
      - GOTRUE_API_HOST=0.0.0.0
      - GOTRUE_API_PORT=9999
      - API_EXTERNAL_URL=${API_EXTERNAL_URL:-http://localhost:8000}
      - GOTRUE_URL=${GOTRUE_URL:-http://localhost:9999}
      - GOTRUE_SITE_URL=${SITE_URL:-http://localhost:3000}
      - GOTRUE_JWT_SECRET=${JWT_SECRET:-super-secret-jwt-token-with-at-least-32-characters}
      - GOTRUE_JWT_EXP=3600
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD:-postgres}@supabase-db:5432/postgres
    depends_on:
      - supabase-db

  supabase-rest:
    image: postgrest/postgrest:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - PGRST_DB_URI=postgres://postgres:${POSTGRES_PASSWORD:-postgres}@supabase-db:5432/postgres
      - PGRST_DB_SCHEMAS=public,storage,graphql_public
      - PGRST_DB_ANON_ROLE=anon
      - PGRST_JWT_SECRET=${JWT_SECRET:-super-secret-jwt-token-with-at-least-32-characters}
      - PGRST_DB_USE_LEGACY_GUCS=false
    depends_on:
      - supabase-db

  supabase-kong:
    image: kong:2.8-alpine
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "8443:8443"
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/var/lib/kong/kong.yml
      - KONG_DNS_ORDER=LAST,A,CNAME
      - KONG_PLUGINS=request-transformer,cors,key-auth,acl
    volumes:
      - ./supabase/volumes/api/kong.yml:/var/lib/kong/kong.yml
    depends_on:
      - supabase-auth
      - supabase-rest

  # Ollama service
  ollama:
    build:
      context: ./ollama
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_ORIGINS=*
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_PORT=11434
    volumes:
      - ./ollama-data:/root/.ollama
